//file:noinspection DependencyNotationArgument
// TODO remove when fixed in RFG ^
/*
 * Add your dependencies here. Supported configurations:
 *  - api("group:name:version:classifier"): if you use the types from this dependency in the public API of this mod
 *       Available at runtime and compiletime for mods depending on this mod
 *  - implementation("g:n:v:c"): if you need this for internal implementation details of the mod, but none of it is visible via the public API
 *       Available at runtime but not compiletime for mods depending on this mod
 *  - compileOnly("g:n:v:c"): if the mod you're building doesn't need this dependency during runtime at all, e.g. for optional mods
 *       Not available at all for mods depending on this mod, only visible at compiletime for this mod
 *  - compileOnlyApi("g:n:v:c"): like compileOnly, but also visible at compiletime for mods depending on this mod
 *       Available at compiletime but not runtime for mods depending on this mod
 *  - runtimeOnlyNonPublishable("g:n:v:c"): if you want to include a mod in this mod's runClient/runServer runs, but not publish it as a dependency
 *       Not available at all for mods depending on this mod, only visible at runtime for this mod
 *  - devOnlyNonPublishable("g:n:v:c"): a combination of runtimeOnlyNonPublishable and compileOnly for dependencies present at both compiletime and runtime,
 *       but not published as Maven dependencies - useful for RFG-deobfuscated dependencies or local testing
 *  - runtimeOnly("g:n:v:c"): if you don't need this at compile time, but want it to be present at runtime
 *       Available at runtime for mods depending on this mod
 *  - annotationProcessor("g:n:v:c"): mostly for java compiler plugins, if you know you need this, use it, otherwise don't worry
 *  - testCONFIG("g:n:v:c") - replace CONFIG by one of the above (except api), same as above but for the test sources instead of main
 *
 *  - shadowImplementation("g:n:v:c"): effectively the same as API, but the dependency is included in your jar under a renamed package name
 *       Requires you to enable usesShadowedDependencies in gradle.properties
 *       For more info, see https://github.com/GregTechCEu/Buildscripts/blob/master/docs/shadow.md
 *
 * You can exclude transitive dependencies (dependencies of the chosen dependency) by appending { transitive = false } if needed,
 * but use this sparingly as it can break using your mod as another mod's dependency if you're not careful.
 *
 * To depend on obfuscated jars you can use `devOnlyNonPublishable(rfg.deobf("dep:spec:1.2.3"))` to fetch an obfuscated jar from maven,
 * or `devOnlyNonPublishable(rfg.deobf(project.files("libs/my-mod-jar.jar")))` to use a file.
 *
 * To add a mod with CurseMaven, replace '("g:n:v:c")' in the above with 'rfg.deobf("curse.maven:project_slug-project_id:file_id")'
 * Example: devOnlyNonPublishable(rfg.deobf("curse.maven:top-245211:2667280"))
 *
 * Gradle names for some of the configuration can be misleading, compileOnlyApi and runtimeOnly both get published as dependencies in Maven, but compileOnly does not.
 * The buildscript adds runtimeOnlyNonPublishable to also have a runtime dependency that's not published.
 *
 * For more details, see https://docs.gradle.org/8.4/userguide/java_library_plugin.html#sec:java_library_configurations_graph
 */
dependencies {

    runtimeOnly(rfg.deobf("com.cleanroommc:strip-latest-forge-requirements:1.0"))

//    implementation(fg.deobf("curse.maven:industrial-craft-242638:2746892"))
    //compileOnly("net.industrial-craft:industrialcraft-2:$icVersion:dev")
    implementation(rfg.deobf("curse.maven:library-for-ar-reworked-1038780:5732205"))

    compileOnly(fileTree(Map.of("dir", "libs/compileOnly", "include", Arrays.asList("*.jar"))))
    compileOnly(rfg.deobf("curse.maven:galacticraft-legacy-564236:4671122"))
    //compileOnly(fg.deobf("mezz.jei:jei_${mcVersion}:${jeiVersion}:api"))
    implementation(rfg.deobf("mezz.jei:jei_${mcVersion}:${jeiVersion}")) // Sorry but it won't start wihout jei...
    //runtimeOnly(fg.deobf("mezz.jei:jei_${mcVersion}:${jeiVersion}")) // I think this crashes the game for me when running from IntelliJ
    //implementation(fileTree(mapOf("dir" to "libs", "include" to listOf("*.jar"))))

    implementation ("net.minecraftforge:mergetool:0.2.3.3")

    // Common:
    annotationProcessor("org.ow2.asm:asm-debug-all:5.2")
    annotationProcessor("com.google.guava:guava:32.1.2-jre")
    annotationProcessor("com.google.code.gson:gson:2.8.9")


    // CCL 3.2.3.358
    implementation (rfg.deobf("curse.maven:codechicken-lib-1-8-242818:2779848"))
    // GTCEu 2.8.10 beta
    implementation (rfg.deobf("curse.maven:gregtech-ce-unofficial-557242:5519022"))
    // GCYM 1.2.10
    implementation (rfg.deobf("curse.maven:gregicality-multiblocks-564858:5508050"))
    // AE2UEL 0.55.6 (transitive gt dep)
    //compileOnly (fg.deobf("curse.maven:ae2-extended-life-570458:4402048"))

    implementation (rfg.deobf("curse.maven:susycore-846224:5732887"))

    //GeckoLib
    implementation (rfg.deobf("curse.maven:geckolib-388172:4020277"))

    implementation (rfg.deobf("curse.maven:realistic-terrain-generation-unofficial-648514:4404814"))

    implementation(rfg.deobf("curse.maven:gregtech-food-option-477021:5500516")) // GT-FO 1.11.3

    implementation (rfg.deobf("curse.maven:applecore-224472:2969118"))

    implementation (rfg.deobf("curse.maven:no-tree-punching-289043:2983385")) // No-tree-punching v2.0.21
    implementation (rfg.deobf("curse.maven:alcatrazcore-304493:2666560")) // AlcatrazCore v1.0.4


    implementation (rfg.deobf("curse.maven:universal-mod-core-371784:4975229")) // Universal-Mod-Care v1.2.1
    implementation (rfg.deobf("curse.maven:track-api-282613:2825260")) // Track-API v1.2.0

    implementation (rfg.deobf("curse.maven:immersive-railroading-277736:4970105")) // Immersive-Railroading v1.10.0

    implementation (rfg.deobf("curse.maven:ctm-267602:2915363")) // CTM 1.0.2.31
    implementation (rfg.deobf("curse.maven:groovyscript-687577:5507936")) // GRS 1.1.1
    implementation (rfg.deobf("curse.maven:modularui-624243:5153413"))
}
